<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxExpression.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>